fs     = require 'fs'
{exec} = require 'child_process'

appFiles  = [
    # omit src/ and .coffee to make the below lines a little shorter
    'init'
#   'window'
    'document'
    'array'    
    'node'
#   'element'
#   'text'    
    'string'
    'run'
]

outFile = 'savepublishing.coffee'

task 'build', 'Build single application file from source files', ->
  appContents = new Array remaining = appFiles.length
  for file, index in appFiles then do (file, index) ->
    fs.readFile "src/#{file}.coffee", 'utf8', (err, fileContents) ->
      throw err if err
      appContents[index] = """\n\nconsole.log "Evaluating: #{file}.coffee"\n\n""" + fileContents
      process() if --remaining is 0
  process = ->
    fs.writeFile outFile, appContents.join("\n\n"), 'utf8', (err) ->
      throw err if err

       
      exec 'coffee --output ../js/lib/ --compile ' + outFile, (err, stdout, stderr) ->
        throw err if err
        console.log stdout + stderr


        
        fs.unlink outFile, (err) ->
            throw err if err
            console.log 'Done.'

task 'docs', 'Build docs with docco (required)', ->
    appContents = new Array remaining = appFiles.length
    for file, index in appFiles then do (file, index) ->
        fs.readFile "src/#{file}.coffee", 'utf8', (err, fileContents) ->
          throw err if err
          appContents[index] = fileContents
          process() if --remaining is 0
    
    process = ->
        fs.writeFile outFile, appContents.join("\n\n"), 'utf8', (err) ->
          throw err if err
        exec 'docco ' + outFile, (err, stdout, stderr) ->
            throw err if err
            console.log stdout + stderr

#task 'minify', 'Minify the resulting application file after build', ->
#  exec 'java -jar "/home/stan/public/compiler.jar" --js lib/app.js --js_output_file lib/app.production.js', (err, stdout, stderr) ->
#    throw err if err
#    console.log stdout + stderr
